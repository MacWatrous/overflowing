{"body":"Overflowing.js\r\n===========\r\n\r\nA small jQuery plugin that traverses up the dom and checks to see if it is overflowing any of its parent elements.\r\n\r\n## Getting Started\r\n\r\nInclude jQuery and the plugin on a page. Then select an element and call the `overflowing` method, optionally passing in a limiting element and a callback function.\r\nBy default overflowing will traverse the dom up to and including the `window`. You can optionally pass in a parent element\r\nin which Overflowing.js will stop at and include in the calculations.\r\n\r\nIf you are using the callback function you can use the `overflowed` argument to get the element being overflowed.\r\nThe callback is fired for each element that is overflowed.\r\n\r\n```html\r\n<body>\r\n  <div class=\"parentElement\">\r\n    <div class=\"middleElement\">\r\n      <p class=\"targetElement\"></p>\r\n    </div>\r\n  </div> \r\n  <script src=\"jquery.js\"></script>\r\n  <script src=\"jquery.overflowing.js\"></script>\r\n  <script>\r\n    $('.targetElement').overflowing('.parentElement', function(overflowed){ \r\n      console.log('This element is being overflowed', overflowed)\r\n    })\r\n  </script>\r\n</body>\r\n```\r\nThis setup will check if `.targetElement` is overflowing any of its parents up to and including `.parentElement`.\r\n\r\n## License\r\nCopyright Â© 2012 Kevin Marx\r\nLicensed under the MIT license.\r\n\r\nBased on Elving Rodriguez's Overflowed\r\nhttp://elvingrodriguez.com/overflowed","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A small jQuery plugin that checks if an element is overflowing.","google":"","name":"Overflowing"}